{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyboardEvent","event","setState","key","document","addEventListener","this","removeEventListener","messageToShow","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAYaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,IAAMQ,EAAgBF,KAAKR,MAAMC,WAAX,mCACUO,KAAKR,MAAMC,WADrB,KAElB,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UAxBrC,GAAyBE,IAAMC,e,MCP/BC,IAASC,OACP,cAAC,EAAD,CAAKd,WAAW,KAChBK,SAASU,eAAe,W","file":"static/js/main.c1de2da8.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\n\ntype State = {\n  pressedKey: '';\n};\n\nexport class App extends React.PureComponent<State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  handleKeyboardEvent = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render(): React.ReactNode {\n    const messageToShow = this.state.pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{messageToShow}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App pressedKey=\"\" />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}